// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cadastro_lojas_fullstack.Infra;

#nullable disable

namespace cadastrolojasfullstack.Migrations
{
    [DbContext(typeof(CadastroLojasContext))]
    [Migration("20221231182910_CriandoTabelasMedidasDemandaArquiteto")]
    partial class CriandoTabelasMedidasDemandaArquiteto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("cadastro_lojas_fullstack.DTO.DemandaDto", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApelidoLoja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ArquitetoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ArquitetoId");

                    b.ToTable("Demandas", (string)null);
                });

            modelBuilder.Entity("cadastro_lojas_fullstack.DTO.MedidaDto", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AreaVendas")
                        .HasColumnType("float");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("aAjardinada")
                        .HasColumnType("float");

                    b.Property<double?>("aConstrTotal")
                        .HasColumnType("float");

                    b.Property<double>("aDescobSemPiso")
                        .HasColumnType("float");

                    b.Property<double?>("aExternaTotal")
                        .HasColumnType("float");

                    b.Property<double>("aNaoutilizadaSup")
                        .HasColumnType("float");

                    b.Property<double>("aNaoutilizadaTerreo")
                        .HasColumnType("float");

                    b.Property<double>("areaApoioMezanino")
                        .HasColumnType("float");

                    b.Property<double>("areaApoioTerreo")
                        .HasColumnType("float");

                    b.Property<double?>("areaApoioTotal")
                        .HasColumnType("float");

                    b.Property<double?>("areaConstrOuRef")
                        .HasColumnType("float");

                    b.Property<double>("areaConstruidaVendas")
                        .HasColumnType("float");

                    b.Property<double>("areaEstacionamentoCoberto")
                        .HasColumnType("float");

                    b.Property<double>("areaEstacionamentoDescoberto")
                        .HasColumnType("float");

                    b.Property<double?>("areaOcupaTerreo")
                        .HasColumnType("float");

                    b.Property<double>("areaTerreno")
                        .HasColumnType("float");

                    b.Property<double?>("somaAreaExternaTerreo")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Medidas", (string)null);
                });

            modelBuilder.Entity("cadastro_lojas_fullstack.DTO.ProjetoDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApelidoLoja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bandeira")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoLoja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataInauguracao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DemandaId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeProjeto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerfilArquitetonico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DemandaId");

                    b.ToTable("Projetos", (string)null);
                });

            modelBuilder.Entity("cadastro_lojas_fullstack.Models.ArquitetoDto", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte?>("ativo")
                        .HasColumnType("tinyint");

                    b.Property<string>("cnpjArquiteto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dataContratacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dataDesligamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("emailArquiteto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeArquiteto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Arquitetos", (string)null);
                });

            modelBuilder.Entity("cadastro_lojas_fullstack.DTO.DemandaDto", b =>
                {
                    b.HasOne("cadastro_lojas_fullstack.Models.ArquitetoDto", "Arquiteto")
                        .WithMany()
                        .HasForeignKey("ArquitetoId");

                    b.Navigation("Arquiteto");
                });

            modelBuilder.Entity("cadastro_lojas_fullstack.DTO.MedidaDto", b =>
                {
                    b.HasOne("cadastro_lojas_fullstack.DTO.ProjetoDto", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("cadastro_lojas_fullstack.DTO.ProjetoDto", b =>
                {
                    b.HasOne("cadastro_lojas_fullstack.DTO.DemandaDto", "Demanda")
                        .WithMany()
                        .HasForeignKey("DemandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demanda");
                });
#pragma warning restore 612, 618
        }
    }
}
